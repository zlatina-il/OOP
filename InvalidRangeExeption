/*
Define a class InvalidRangeException<T> that holds information about an error condition related to invalid range. It should hold error 
message and a range definition [start … end]. Write a sample application that demonstrates the InvalidRangeException<int> and 
InvalidRangeException<DateTime> by entering numbers in the range [1..100] and dates in the range [1.1.1980 … 31.12.2013].
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace InvalidRangeExeption
{
    public class InvalidRangeExeption<T> : ApplicationException
    {
        private T start;
        private T end;

        public InvalidRangeExeption(string message, T min, T max)
            : base(message)
        {
            this.start = min;
            this.end = max;
        }

        public T Start 
        {
            get { return this.start; }
            set { this.start = value; }
        }

        public T End 
        {
            get { return this.end; }


            set { this.end = value; } 
        }
    }
    
    class Program
    {
        public static int GetNumber(int start, int end)
        {
            int number = int.Parse(Console.ReadLine());
            if (number < start || number > end)
            {
                throw new InvalidRangeExeption<int>("The number is out of range!", start, end);
            }
            return number;
        }

        public static void PrintNumber()
        {
            try
            {
                Console.WriteLine("Your number: " + GetNumber(1, 100));
            }
            catch (InvalidRangeExeption<int> invalidRange)
            {
                Console.WriteLine("The number is out of range [{0}, {1}].", invalidRange.Start, invalidRange.End);
            }
            catch (Exception exception)
            {
                Console.WriteLine(exception.Message);
            }
        }

        public static DateTime GetDate(DateTime start, DateTime end)
        {
            DateTime date = DateTime.Parse(Console.ReadLine());
            if (date < start || date > end)
            {
                throw new InvalidRangeExeption<DateTime>("The date is out of range!", start, end);
            }
            return date;
        }

        public static void PrintDate()
        {
            try
            {
                Console.WriteLine("Your date: " + GetDate(new DateTime(1980, 01, 01), new DateTime(2013, 12, 31)));
            }
            catch (InvalidRangeExeption<DateTime> invalidRange)
            {
                Console.WriteLine("The date is out of range [{0}, {1}]", invalidRange.Start, invalidRange.End);
            }
            catch (Exception exception)
            {
                Console.WriteLine(exception.Message);
            }
        }


        public static void Main()
        {
            Console.WriteLine("Enter 1 for a number.");
            Console.WriteLine("Enter 2 for a number.");
            if (Console.ReadLine() == "1")
            {
                Console.WriteLine("Enter Number: ");
                PrintNumber();
            }
            else 
            {
                Console.WriteLine("Enter date: ");
                PrintDate();
            }
        }
    }
}
